name: CI-CD
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# allow actions to read GitHub releases (for kubelogin action)
permissions:
  contents: read

env:
  NAMESPACE: devops-dashboard

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [users-service, tasks-service]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install & build
        working-directory: services/${{ matrix.service }}
        run: |
          npm ci
          npm run build

      # Login to Azure (Service Principal JSON in AZURE_CREDENTIALS)
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Login to ACR (derive name from FQDN secret)
      - name: ACR login
        shell: bash
        run: |
          ACR_LOGIN_SERVER="${{ secrets.ACR_LOGIN_SERVER }}"   # e.g. tomerdashboardacr12345.azurecr.io
          ACR_NAME="${ACR_LOGIN_SERVER%%.*}"                   # -> tomerdashboardacr12345
          az acr login --name "$ACR_NAME"

      - name: Build & push image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.service }}:${{ github.sha }} services/${{ matrix.service }}
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/${{ matrix.service }}:${{ github.sha }}

  deploy:
    needs: [build-and-push]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # ðŸ”‘ Login again in this job
      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Install Helm
        uses: azure/setup-helm@v4

      # Install kubelogin (pin to a real release and pass token)
      - name: Install kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: v0.2.12
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # Set AKS context (no 'creds' here)
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: rg-tomerdashboard
          cluster-name: aks-tomerdashboard
          use-kubelogin: true
          # subscription: ${{ secrets.AZURE_SUBSCRIPTION_ID }} # uncomment if needed

      - name: Ensure namespace
        run: |
          kubectl get ns ${{ env.NAMESPACE }} || kubectl create ns ${{ env.NAMESPACE }}

      - name: Helm upgrade/install users-service
        run: |
          helm upgrade --install users-service charts/users-service \
            --namespace ${{ env.NAMESPACE }} --create-namespace \
            --set image.repository=${{ secrets.ACR_LOGIN_SERVER }}/users-service \
            --set image.tag=${{ github.sha }}

      - name: Helm upgrade/install tasks-service
        run: |
          helm upgrade --install tasks-service charts/tasks-service \
            --namespace ${{ env.NAMESPACE }} \
            --set image.repository=${{ secrets.ACR_LOGIN_SERVER }}/tasks-service \
            --set image.tag=${{ github.sha }}
