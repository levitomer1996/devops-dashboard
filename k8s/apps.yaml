apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
  namespace: devops-dashboard
spec:
  replicas: 3
  selector:
    matchLabels: { app: users-service }
  template:
    metadata:
      labels: { app: users-service }
    spec:
      containers:
        - name: users-service
          image: users-service:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: PORT
              value: "3000"
            - name: MONGO_URI
              value: "mongodb://admin:adminpass@users-mongo:27017/usersdb?authSource=admin"
          ports:
            - containerPort: 3000

          readinessProbe:
            tcpSocket: { port: 3000 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket: { port: 3000 }
            initialDelaySeconds: 15
            periodSeconds: 20

---
apiVersion: v1
kind: Service
metadata:
  name: users-service
  namespace: devops-dashboard
spec:
  selector: { app: users-service }
  ports:
    - port: 3000
      targetPort: 3000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks-service
  namespace: devops-dashboard
spec:
  replicas: 3
  selector:
    matchLabels: { app: tasks-service }
  template:
    metadata:
      labels: { app: tasks-service }
    spec:
      containers:
        - name: tasks-service
          image: tasks-service:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: PORT
              value: "3000"
            - name: MONGO_URI
              value: "mongodb://admin:adminpass@tasks-mongo:27017/tasksdb?authSource=admin"
          ports:
            - containerPort: 3000
          readinessProbe:
            tcpSocket: { port: 3000 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket: { port: 3000 }
            initialDelaySeconds: 15
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: tasks-service
  namespace: devops-dashboard
spec:
  selector: { app: tasks-service }
  ports:
    - port: 3000
      targetPort: 3000
  type: LoadBalancer
